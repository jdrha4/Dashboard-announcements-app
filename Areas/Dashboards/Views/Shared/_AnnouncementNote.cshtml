@model AnnouncementViewModel
@{
    var categoryColors = new Dictionary<Application.Infrastructure.Database.Models.AnnouncementCategory, string>
    {
        { Application.Infrastructure.Database.Models.AnnouncementCategory.Borrowing, "bg-red" },
        { Application.Infrastructure.Database.Models.AnnouncementCategory.RenovationNotice, "bg-blue" },
        { Application.Infrastructure.Database.Models.AnnouncementCategory.LostAndFound, "bg-orange" },
        { Application.Infrastructure.Database.Models.AnnouncementCategory.Technical, "bg-purple" },
        { Application.Infrastructure.Database.Models.AnnouncementCategory.BuySell, "bg-green" },
        { Application.Infrastructure.Database.Models.AnnouncementCategory.General, "bg-grey" },
        { Application.Infrastructure.Database.Models.AnnouncementCategory.Unsorted, "bg-yellow" },
    };

    var category = Model.Category ?? Application.Infrastructure.Database.Models.AnnouncementCategory.Unsorted;
    var bgColor = categoryColors.ContainsKey(category) ? categoryColors[category] : "bg-light";
}

<a hx-get hx-action="Details" hx-controller="Announcement" hx-area="Announcements" hx-route-announcementId="@Model.Id" hx-route-bgColor="@bgColor"
   hx-target="#modal-container"
   hx-swap="innerHTML"
   class="text-decoration-none text-dark rounded-4">
    <div class="card shadow-sm border-0 h-100 rounded-4">
        <div class="card-body d-flex flex-column justify-content-between @bgColor rounded-3">
            <div>
                <h6 class="fs-6 text-uppercase">
                    @if (Model.HasPoll)
                    {
                        <span class="badge bg-info text-dark" title="This announcement includes a poll">
                            <i class="bi bi-bar-chart"></i> Poll
                        </span>
                    }
                    @category
                </h6>
                <p class="fs-4 fw-bold mb-2 text-truncate">
                    @if (Model.IsImportant)
                    {
                        <i class="bi bi-star-fill bg-important ms-1" title="Important"></i>
                    }
                    @Model.Title
                </p>
                <small class="text-dark">
                    @( (Model.Description ?? "").Length > 50
                        ? (Model.Description!.Substring(0, 50) + "...")
                        : (Model.Description ?? "") )
                </small>
            </div>
            <div class="d-flex align-items-center pt-3">
                @if (!string.IsNullOrEmpty(Model.ProfileImageBase64))
                {
                    <img src="@Model.ProfileImageBase64" class="rounded-circle shadow-sm" style="width: 40px; height: 40px; object-fit: cover;" alt="Profile picture" />
                }
                else
                {
                    <img src="~/images/default-avatar.png" class="rounded-circle shadow-sm" style="width: 40px; height: 40px; object-fit: cover;" alt="Default profile picture" />
                }
                <div class="ms-2">
                    <small class="text-dark d-block">@Model.UserName</small>
                    <small class="text-muted d-block">@Model.CreatedAt.ToLocalTime().ToString("d. M. yyyy  HH:mm")</small>
                </div>
            </div>
        </div>
    </div>
</a>
